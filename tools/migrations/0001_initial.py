# Generated by Django 5.1.4 on 2025-01-09 04:33

import django.core.validators
import django.db.models.deletion
import storages.backends.gcloud
import tools.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FieldOfStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('value', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Fields of Study',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProgramLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('value', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StudyServicePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('plan_type', models.CharField(choices=[('program_support', 'Program Application Support'), ('study_abroad', 'Complete Study Abroad Service')], max_length=50, unique=True)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('timeline', models.CharField(max_length=100)),
                ('button_text', models.CharField(max_length=50)),
                ('button_url', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Study Service Plan',
                'verbose_name_plural': 'Study Service Plans',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StudyPlanService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=255)),
                ('is_highlighted', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='included_services', to='tools.studyserviceplan')),
            ],
            options={
                'verbose_name': 'Included Service',
                'verbose_name_plural': 'Included Services',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StudyPlanFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=255)),
                ('is_highlighted', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='tools.studyserviceplan')),
            ],
            options={
                'verbose_name': 'Plan Feature',
                'verbose_name_plural': 'Plan Features',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, storage=storages.backends.gcloud.GoogleCloudStorage(), upload_to=tools.models.school_logo_path)),
                ('website', models.URLField()),
                ('ranking', models.CharField(max_length=100)),
                ('tuition', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('scholarships_available', models.BooleanField(default=False)),
                ('work_opportunities', models.BooleanField(default=False)),
                ('housing_available', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='schools', to='tools.country')),
                ('fields_of_study', models.ManyToManyField(to='tools.fieldofstudy')),
                ('programs', models.ManyToManyField(to='tools.programlevel')),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['tuition'], name='tools_schoo_tuition_28c2d6_idx')],
            },
        ),
    ]
